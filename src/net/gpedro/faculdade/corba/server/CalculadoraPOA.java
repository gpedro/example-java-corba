package net.gpedro.faculdade.corba.server;

import net.gpedro.faculdade.corba.shared.Calculadora;
import net.gpedro.faculdade.corba.client.CalculadoraHelper;


/**
* CalculadoraApp/CalculadoraPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CalculadoraApp.idl
* Quarta-feira, 20 de Maio de 2015 00h29min10s AMT
*/

public abstract class CalculadoraPOA extends org.omg.PortableServer.Servant
 implements net.gpedro.faculdade.corba.shared.CalculadoraOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("somar", new java.lang.Integer (0));
    _methods.put ("substrair", new java.lang.Integer (1));
    _methods.put ("multiplicar", new java.lang.Integer (2));
    _methods.put ("dividir", new java.lang.Integer (3));
    _methods.put ("shutdown", new java.lang.Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // CalculadoraApp/Calculadora/somar
       {
         int n1 = in.read_long ();
         int n2 = in.read_long ();
         int $result = (int)0;
         $result = this.somar (n1, n2);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 1:  // CalculadoraApp/Calculadora/substrair
       {
         int n1 = in.read_long ();
         int n2 = in.read_long ();
         int $result = (int)0;
         $result = this.substrair (n1, n2);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 2:  // CalculadoraApp/Calculadora/multiplicar
       {
         int n1 = in.read_long ();
         int n2 = in.read_long ();
         int $result = (int)0;
         $result = this.multiplicar (n1, n2);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 3:  // CalculadoraApp/Calculadora/dividir
       {
         int n1 = in.read_long ();
         int n2 = in.read_long ();
         double $result = (double)0;
         $result = this.dividir (n1, n2);
         out = $rh.createReply();
         out.write_double ($result);
         break;
       }

       case 4:  // CalculadoraApp/Calculadora/shutdown
       {
         this.shutdown ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:CalculadoraApp/Calculadora:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Calculadora _this() 
  {
    return CalculadoraHelper.narrow(
    super._this_object());
  }

  public Calculadora _this(org.omg.CORBA.ORB orb) 
  {
    return CalculadoraHelper.narrow(
    super._this_object(orb));
  }


} // class CalculadoraPOA
